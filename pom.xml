<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.lan</groupId>
    <artifactId>myStudy</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>myStudy_service</module>
        <module>myStudy_provider</module>
        <module>myStudy_consumer</module>
        <module>myStudy_tools</module>
    </modules>

    <!--在这里设置打包类型为pom，作用是为了实现多模块项目-->
    <packaging>pom</packaging>

    <!-- 第一步：添加Springboot的parent -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.2.RELEASE</version>
    </parent>

    <!-- 设置我们项目的一些版本属性 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <dubbo.version>1.0.0</dubbo.version>
        <zkclient.version>0.10</zkclient.version>
        <lombok.version>1.16.18</lombok.version>
        <!--<spring-boot.version>2.0.2.RELEASE</spring-boot.version>-->
        <mybatis.version>1.3.2</mybatis.version>
        <mysql-connector.version>6.0.6</mysql-connector.version>
        <druid.version>1.0.26</druid.version>
        <!--<thymeleaf.version>2.0.2.RELEASE</thymeleaf.version>-->
    </properties>
    <!-- 声明一些项目依赖管理，方便我们的依赖版本管理 -->
    <dependencyManagement>
        <dependencies>
            <!--&lt;!&ndash; Springboot依赖 &ndash;&gt;-->
            <!--<dependency>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-starter</artifactId>-->
                <!--<version>${spring-boot.version}</version>-->
            <!--</dependency>-->

            <!--&lt;!&ndash; Springboot-web依赖 &ndash;&gt;-->
            <!--<dependency>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-starter-web</artifactId>-->
                <!--<version>${spring-boot.version}</version>-->
            <!--</dependency>-->

            <!-- 使用lombok实现JavaBean的get、set、toString、hashCode、equals等方法的自动生成  -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Dubbo依赖 -->
            <dependency>
                <groupId>io.dubbo.springboot</groupId>
                <artifactId>spring-boot-starter-dubbo</artifactId>
                <version>${dubbo.version}</version>
            </dependency>

            <!-- zookeeper的客户端依赖 -->
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
            </dependency>

            <!-- mybatis依赖 -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.version}</version>
            </dependency>

            <!-- mysql驱动 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector.version}</version>
            </dependency>

            <!-- 连接池 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!--&lt;!&ndash;thymeleaf模板 &ndash;&gt;-->
            <!--<dependency>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-starter-thymeleaf</artifactId>-->
                <!--<version>${thymeleaf.version}</version>-->
            <!--</dependency>-->




        </dependencies>
    </dependencyManagement>
</project>